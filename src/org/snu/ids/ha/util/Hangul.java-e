/*     */ package org.snu.ids.ha.util;
/*     */ 
/*     */ public class Hangul
/*     */ {
/*  26 */   public static final StringSet MO_POSITIVE_SET = new StringSet(new String[] { "ㅏ", "ㅐ", "ㅑ", "ㅒ", "ㅗ", "ㅛ", "ㅘ" });
/*     */ 
/*  35 */   public static final StringSet MO_NEGATIVE_SET = new StringSet(new String[] { "ㅓ", "ㅔ", "ㅕ", "ㅖ", "ㅜ", "ㅠ", "ㅝ", 
/*  36 */     "ㅞ", "ㅟ", "ㅚ", "ㅙ" });
/*     */ 
/*  45 */   public static final StringSet MO_NEUTRIAL_SET = new StringSet(new String[] { "ㅡ", "ㅣ", "ㅢ" });
/*     */ 
/*  54 */   public static final StringSet MO_DOUBLE_SET = new StringSet(new String[] { "ㅘ", "ㅝ", "ㅞ", "ㅟ", "ㅚ", "ㅙ" });
/*     */ 
/*  56 */   public char cho = '\000';
/*  57 */   public char jung = '\000';
/*  58 */   public char jong = '\000';
/*     */ 
/*     */   public String toString()
/*     */   {
/*  63 */     return "(" + this.cho + "," + this.jung + "," + this.jong + ")";
/*     */   }
/*     */ 
/*     */   private String get()
/*     */   {
/*  78 */     String ret = this.cho;
/*  79 */     ret = ret + (this.jung == 0 ? "" : new StringBuilder(String.valueOf(this.jung)).toString());
/*     */ 
/*  81 */     switch (this.jong) {
/*     */     case '\000':
/*  83 */       ret = ret;
/*  84 */       break;
/*     */     case 'ㄳ':
/*  86 */       ret = ret + "ㄱㅅ";
/*  87 */       break;
/*     */     case 'ㄵ':
/*  89 */       ret = ret + "ㄴㅋ";
/*  90 */       break;
/*     */     case 'ㄶ':
/*  92 */       ret = ret + "ㄴㅎ";
/*  93 */       break;
/*     */     case 'ㄺ':
/*  95 */       ret = ret + "ㄹㄱ";
/*  96 */       break;
/*     */     case 'ㄻ':
/*  98 */       ret = ret + "ㄹㅁ";
/*  99 */       break;
/*     */     case 'ㄼ':
/* 101 */       ret = ret + "ㄹㅂ";
/* 102 */       break;
/*     */     case 'ㄽ':
/* 104 */       ret = ret + "ㄹㅅ";
/* 105 */       break;
/*     */     case 'ㄾ':
/* 107 */       ret = ret + "ㄹㅌ";
/* 108 */       break;
/*     */     case 'ㄿ':
/* 110 */       ret = ret + "ㄹㅍ";
/* 111 */       break;
/*     */     case 'ㅀ':
/* 113 */       ret = ret + "ㄹㅎ";
/* 114 */       break;
/*     */     case 'ㅄ':
/* 116 */       ret = ret + "ㅂㅅ";
/* 117 */       break;
/*     */     default:
/* 119 */       ret = ret + this.jong;
/*     */     }
/*     */ 
/* 122 */     return ret;
/*     */   }
/*     */ 
/*     */   public boolean hasCho()
/*     */   {
/* 128 */     return this.cho != 0;
/*     */   }
/*     */ 
/*     */   public boolean hasJung()
/*     */   {
/* 134 */     return this.jung != 0;
/*     */   }
/*     */ 
/*     */   public boolean hasJong()
/*     */   {
/* 140 */     return this.jong != 0;
/*     */   }
/*     */ 
/*     */   protected static final char getCho(int idx)
/*     */   {
/* 146 */     char ret = '\000';
/* 147 */     switch (idx) {
/*     */     case 0:
/* 149 */       ret = 'ㄱ';
/* 150 */       break;
/*     */     case 1:
/* 152 */       ret = 'ㄲ';
/* 153 */       break;
/*     */     case 2:
/* 155 */       ret = 'ㄴ';
/* 156 */       break;
/*     */     case 3:
/* 158 */       ret = 'ㄷ';
/* 159 */       break;
/*     */     case 4:
/* 161 */       ret = 'ㄸ';
/* 162 */       break;
/*     */     case 5:
/* 164 */       ret = 'ㄹ';
/* 165 */       break;
/*     */     case 6:
/* 167 */       ret = 'ㅁ';
/* 168 */       break;
/*     */     case 7:
/* 170 */       ret = 'ㅂ';
/* 171 */       break;
/*     */     case 8:
/* 173 */       ret = 'ㅃ';
/* 174 */       break;
/*     */     case 9:
/* 176 */       ret = 'ㅅ';
/* 177 */       break;
/*     */     case 10:
/* 179 */       ret = 'ㅆ';
/* 180 */       break;
/*     */     case 11:
/* 182 */       ret = 'ㅇ';
/* 183 */       break;
/*     */     case 12:
/* 185 */       ret = 'ㅈ';
/* 186 */       break;
/*     */     case 13:
/* 188 */       ret = 'ㅉ';
/* 189 */       break;
/*     */     case 14:
/* 191 */       ret = 'ㅊ';
/* 192 */       break;
/*     */     case 15:
/* 194 */       ret = 'ㅋ';
/* 195 */       break;
/*     */     case 16:
/* 197 */       ret = 'ㅌ';
/* 198 */       break;
/*     */     case 17:
/* 200 */       ret = 'ㅍ';
/* 201 */       break;
/*     */     case 18:
/* 203 */       ret = 'ㅎ';
/*     */     }
/*     */ 
/* 206 */     return ret;
/*     */   }
/*     */ 
/*     */   protected static final int getChoIdx(char ch)
/*     */   {
/* 221 */     int ret = -1;
/* 222 */     switch (ch) {
/*     */     case 'ㄱ':
/* 224 */       ret = 0;
/* 225 */       break;
/*     */     case 'ㄲ':
/* 227 */       ret = 1;
/* 228 */       break;
/*     */     case 'ㄴ':
/* 230 */       ret = 2;
/* 231 */       break;
/*     */     case 'ㄷ':
/* 233 */       ret = 3;
/* 234 */       break;
/*     */     case 'ㄸ':
/* 236 */       ret = 4;
/* 237 */       break;
/*     */     case 'ㄹ':
/* 239 */       ret = 5;
/* 240 */       break;
/*     */     case 'ㅁ':
/* 242 */       ret = 6;
/* 243 */       break;
/*     */     case 'ㅂ':
/* 245 */       ret = 7;
/* 246 */       break;
/*     */     case 'ㅃ':
/* 248 */       ret = 8;
/* 249 */       break;
/*     */     case 'ㅅ':
/* 251 */       ret = 9;
/* 252 */       break;
/*     */     case 'ㅆ':
/* 254 */       ret = 10;
/* 255 */       break;
/*     */     case 'ㅇ':
/* 257 */       ret = 11;
/* 258 */       break;
/*     */     case 'ㅈ':
/* 260 */       ret = 12;
/* 261 */       break;
/*     */     case 'ㅉ':
/* 263 */       ret = 13;
/* 264 */       break;
/*     */     case 'ㅊ':
/* 266 */       ret = 14;
/* 267 */       break;
/*     */     case 'ㅋ':
/* 269 */       ret = 15;
/* 270 */       break;
/*     */     case 'ㅌ':
/* 272 */       ret = 16;
/* 273 */       break;
/*     */     case 'ㅍ':
/* 275 */       ret = 17;
/* 276 */       break;
/*     */     case 'ㅎ':
/* 278 */       ret = 18;
/*     */     case 'ㄳ':
/*     */     case 'ㄵ':
/*     */     case 'ㄶ':
/*     */     case 'ㄺ':
/*     */     case 'ㄻ':
/*     */     case 'ㄼ':
/*     */     case 'ㄽ':
/*     */     case 'ㄾ':
/*     */     case 'ㄿ':
/*     */     case 'ㅀ':
/* 281 */     case 'ㅄ': } return ret;
/*     */   }
/*     */ 
/*     */   protected static final char getJung(int idx)
/*     */   {
/* 287 */     char ret = '\000';
/* 288 */     switch (idx) {
/*     */     case 0:
/* 290 */       ret = 'ㅏ';
/* 291 */       break;
/*     */     case 1:
/* 293 */       ret = 'ㅐ';
/* 294 */       break;
/*     */     case 2:
/* 296 */       ret = 'ㅑ';
/* 297 */       break;
/*     */     case 3:
/* 299 */       ret = 'ㅒ';
/* 300 */       break;
/*     */     case 4:
/* 302 */       ret = 'ㅓ';
/* 303 */       break;
/*     */     case 5:
/* 305 */       ret = 'ㅔ';
/* 306 */       break;
/*     */     case 6:
/* 308 */       ret = 'ㅕ';
/* 309 */       break;
/*     */     case 7:
/* 311 */       ret = 'ㅖ';
/* 312 */       break;
/*     */     case 8:
/* 314 */       ret = 'ㅗ';
/* 315 */       break;
/*     */     case 9:
/* 317 */       ret = 'ㅘ';
/* 318 */       break;
/*     */     case 10:
/* 320 */       ret = 'ㅙ';
/* 321 */       break;
/*     */     case 11:
/* 323 */       ret = 'ㅚ';
/* 324 */       break;
/*     */     case 12:
/* 326 */       ret = 'ㅛ';
/* 327 */       break;
/*     */     case 13:
/* 329 */       ret = 'ㅜ';
/* 330 */       break;
/*     */     case 14:
/* 332 */       ret = 'ㅝ';
/* 333 */       break;
/*     */     case 15:
/* 335 */       ret = 'ㅞ';
/* 336 */       break;
/*     */     case 16:
/* 338 */       ret = 'ㅟ';
/* 339 */       break;
/*     */     case 17:
/* 341 */       ret = 'ㅠ';
/* 342 */       break;
/*     */     case 18:
/* 344 */       ret = 'ㅡ';
/* 345 */       break;
/*     */     case 19:
/* 347 */       ret = 'ㅢ';
/* 348 */       break;
/*     */     case 20:
/* 350 */       ret = 'ㅣ';
/*     */     }
/*     */ 
/* 353 */     return ret;
/*     */   }
/*     */ 
/*     */   protected static final int getJungIdx(char ch)
/*     */   {
/* 368 */     int ret = -1;
/* 369 */     switch (ch) {
/*     */     case 'ㅏ':
/* 371 */       ret = 0;
/* 372 */       break;
/*     */     case 'ㅐ':
/* 374 */       ret = 1;
/* 375 */       break;
/*     */     case 'ㅑ':
/* 377 */       ret = 2;
/* 378 */       break;
/*     */     case 'ㅒ':
/* 380 */       ret = 3;
/* 381 */       break;
/*     */     case 'ㅓ':
/* 383 */       ret = 4;
/* 384 */       break;
/*     */     case 'ㅔ':
/* 386 */       ret = 5;
/* 387 */       break;
/*     */     case 'ㅕ':
/* 389 */       ret = 6;
/* 390 */       break;
/*     */     case 'ㅖ':
/* 392 */       ret = 7;
/* 393 */       break;
/*     */     case 'ㅗ':
/* 395 */       ret = 8;
/* 396 */       break;
/*     */     case 'ㅘ':
/* 398 */       ret = 9;
/* 399 */       break;
/*     */     case 'ㅙ':
/* 401 */       ret = 10;
/* 402 */       break;
/*     */     case 'ㅚ':
/* 404 */       ret = 11;
/* 405 */       break;
/*     */     case 'ㅛ':
/* 407 */       ret = 12;
/* 408 */       break;
/*     */     case 'ㅜ':
/* 410 */       ret = 13;
/* 411 */       break;
/*     */     case 'ㅝ':
/* 413 */       ret = 14;
/* 414 */       break;
/*     */     case 'ㅞ':
/* 416 */       ret = 15;
/* 417 */       break;
/*     */     case 'ㅟ':
/* 419 */       ret = 16;
/* 420 */       break;
/*     */     case 'ㅠ':
/* 422 */       ret = 17;
/* 423 */       break;
/*     */     case 'ㅡ':
/* 425 */       ret = 18;
/* 426 */       break;
/*     */     case 'ㅢ':
/* 428 */       ret = 19;
/* 429 */       break;
/*     */     case 'ㅣ':
/* 431 */       ret = 20;
/*     */     }
/*     */ 
/* 435 */     return ret;
/*     */   }
/*     */ 
/*     */   protected static final char getJong(int idx)
/*     */   {
/* 441 */     char ret = '\000';
/* 442 */     switch (idx) {
/*     */     case 0:
/* 444 */       ret = '\000';
/* 445 */       break;
/*     */     case 1:
/* 447 */       ret = 'ㄱ';
/* 448 */       break;
/*     */     case 2:
/* 450 */       ret = 'ㄲ';
/* 451 */       break;
/*     */     case 3:
/* 453 */       ret = 'ㄳ';
/* 454 */       break;
/*     */     case 4:
/* 456 */       ret = 'ㄴ';
/* 457 */       break;
/*     */     case 5:
/* 459 */       ret = 'ㄵ';
/* 460 */       break;
/*     */     case 6:
/* 462 */       ret = 'ㄶ';
/* 463 */       break;
/*     */     case 7:
/* 465 */       ret = 'ㄷ';
/* 466 */       break;
/*     */     case 8:
/* 468 */       ret = 'ㄹ';
/* 469 */       break;
/*     */     case 9:
/* 471 */       ret = 'ㄺ';
/* 472 */       break;
/*     */     case 10:
/* 474 */       ret = 'ㄻ';
/* 475 */       break;
/*     */     case 11:
/* 477 */       ret = 'ㄼ';
/* 478 */       break;
/*     */     case 12:
/* 480 */       ret = 'ㄽ';
/* 481 */       break;
/*     */     case 13:
/* 483 */       ret = 'ㄾ';
/* 484 */       break;
/*     */     case 14:
/* 486 */       ret = 'ㄿ';
/* 487 */       break;
/*     */     case 15:
/* 489 */       ret = 'ㅀ';
/* 490 */       break;
/*     */     case 16:
/* 492 */       ret = 'ㅁ';
/* 493 */       break;
/*     */     case 17:
/* 495 */       ret = 'ㅂ';
/* 496 */       break;
/*     */     case 18:
/* 498 */       ret = 'ㅄ';
/* 499 */       break;
/*     */     case 19:
/* 501 */       ret = 'ㅅ';
/* 502 */       break;
/*     */     case 20:
/* 504 */       ret = 'ㅆ';
/* 505 */       break;
/*     */     case 21:
/* 507 */       ret = 'ㅇ';
/* 508 */       break;
/*     */     case 22:
/* 510 */       ret = 'ㅈ';
/* 511 */       break;
/*     */     case 23:
/* 513 */       ret = 'ㅊ';
/* 514 */       break;
/*     */     case 24:
/* 516 */       ret = 'ㅋ';
/* 517 */       break;
/*     */     case 25:
/* 519 */       ret = 'ㅌ';
/* 520 */       break;
/*     */     case 26:
/* 522 */       ret = 'ㅍ';
/* 523 */       break;
/*     */     case 27:
/* 525 */       ret = 'ㅎ';
/*     */     }
/*     */ 
/* 528 */     return ret;
/*     */   }
/*     */ 
/*     */   protected static final int getJongIdx(char ch)
/*     */   {
/* 543 */     int ret = -1;
/* 544 */     switch (ch) {
/*     */     case '\000':
/* 546 */       ret = 0;
/* 547 */       break;
/*     */     case ' ':
/* 549 */       ret = 0;
/* 550 */       break;
/*     */     case 'ㄱ':
/* 552 */       ret = 1;
/* 553 */       break;
/*     */     case 'ㄲ':
/* 555 */       ret = 2;
/* 556 */       break;
/*     */     case 'ㄳ':
/* 558 */       ret = 3;
/* 559 */       break;
/*     */     case 'ㄴ':
/* 561 */       ret = 4;
/* 562 */       break;
/*     */     case 'ㄵ':
/* 564 */       ret = 5;
/* 565 */       break;
/*     */     case 'ㄶ':
/* 567 */       ret = 6;
/* 568 */       break;
/*     */     case 'ㄷ':
/* 570 */       ret = 7;
/* 571 */       break;
/*     */     case 'ㄹ':
/* 573 */       ret = 8;
/* 574 */       break;
/*     */     case 'ㄺ':
/* 576 */       ret = 9;
/* 577 */       break;
/*     */     case 'ㄻ':
/* 579 */       ret = 10;
/* 580 */       break;
/*     */     case 'ㄼ':
/* 582 */       ret = 11;
/* 583 */       break;
/*     */     case 'ㄽ':
/* 585 */       ret = 12;
/* 586 */       break;
/*     */     case 'ㄾ':
/* 588 */       ret = 13;
/* 589 */       break;
/*     */     case 'ㄿ':
/* 591 */       ret = 14;
/* 592 */       break;
/*     */     case 'ㅀ':
/* 594 */       ret = 15;
/* 595 */       break;
/*     */     case 'ㅁ':
/* 597 */       ret = 16;
/* 598 */       break;
/*     */     case 'ㅂ':
/* 600 */       ret = 17;
/* 601 */       break;
/*     */     case 'ㅄ':
/* 603 */       ret = 18;
/* 604 */       break;
/*     */     case 'ㅅ':
/* 606 */       ret = 19;
/* 607 */       break;
/*     */     case 'ㅆ':
/* 609 */       ret = 20;
/* 610 */       break;
/*     */     case 'ㅇ':
/* 612 */       ret = 21;
/* 613 */       break;
/*     */     case 'ㅈ':
/* 615 */       ret = 22;
/* 616 */       break;
/*     */     case 'ㅊ':
/* 618 */       ret = 23;
/* 619 */       break;
/*     */     case 'ㅋ':
/* 621 */       ret = 24;
/* 622 */       break;
/*     */     case 'ㅌ':
/* 624 */       ret = 25;
/* 625 */       break;
/*     */     case 'ㅍ':
/* 627 */       ret = 26;
/* 628 */       break;
/*     */     case 'ㅎ':
/* 630 */       ret = 27;
/*     */     }
/*     */ 
/* 633 */     return ret;
/*     */   }
/*     */ 
/*     */   public static Hangul split(char ch)
/*     */   {
/* 648 */     Hangul hangul = new Hangul();
/* 649 */     int x = ch & 0xFFFF; int y = 0; int z = 0;
/* 650 */     if ((x >= 44032) && (x <= 55203)) {
/* 651 */       y = x - 44032;
/* 652 */       z = y % 588;
/* 653 */       hangul.cho = getCho(y / 588);
/* 654 */       hangul.jung = getJung(z / 28);
/* 655 */       hangul.jong = getJong(z % 28);
/* 656 */     } else if ((x >= 12593) && (x <= 12643)) {
/* 657 */       if (getChoIdx(ch) > -1)
/* 658 */         hangul.cho = ch;
/* 659 */       else if (getJungIdx(ch) > -1)
/* 660 */         hangul.jung = ch;
/* 661 */       else if (getJongIdx(ch) > -1)
/* 662 */         hangul.jong = ch;
/*     */     }
/*     */     else {
/* 665 */       hangul.cho = ch;
/*     */     }
/* 667 */     return hangul;
/*     */   }
/*     */ 
/*     */   public static String split(String string)
/*     */   {
/* 682 */     if (string == null) return null;
/*     */ 
/* 684 */     StringBuffer sb = new StringBuffer();
/* 685 */     int i = 0; for (int stop = string.length(); i < stop; i++) {
/* 686 */       sb.append(split(string.charAt(i)));
/*     */     }
/* 688 */     return sb.toString();
/*     */   }
/*     */ 
/*     */   public static char combine(char cho, char jung, char jong)
/*     */   {
/* 705 */     return (char)(getChoIdx(cho) * 21 * 28 + getJungIdx(jung) * 28 + getJongIdx(jong) + 44032);
/*     */   }
/*     */ 
/*     */   public static String append(String head, String tail)
/*     */   {
/* 723 */     String ret = null;
/*     */ 
/* 725 */     Hangul headTail = split(head.charAt(head.length() - 1));
/* 726 */     Hangul tailHead = split(tail.charAt(0));
/*     */ 
/* 728 */     if ((tailHead.hasJung()) || (headTail.hasJong())) {
/* 729 */       ret = head + tail;
/*     */     } else {
/* 731 */       String headHead = head.substring(0, head.length() - 1);
/* 732 */       String tailTail = tail.substring(1);
/* 733 */       ret = headHead + combine(headTail.cho, headTail.jung, tailHead.cho) + tailTail;
/*     */     }
/* 735 */     return ret;
/*     */   }
/*     */ 
/*     */   public static boolean hasJong(char ch)
/*     */   {
/* 750 */     return split(ch).hasJong();
/*     */   }
/*     */ 
/*     */   public static boolean hasJong(String string)
/*     */   {
/* 765 */     if (!Util.valid(string)) return false;
/* 766 */     return hasJong(string.charAt(string.length() - 1));
/*     */   }
/*     */ 
/*     */   public static String split2(String string)
/*     */   {
/* 781 */     if (string == null) return null;
/* 782 */     String ret = "";
/* 783 */     int i = 0; for (int stop = string.length(); i < stop; i++) {
/* 784 */       ret = ret + split(string.charAt(i)).get() + ":";
/*     */     }
/* 786 */     return ret;
/*     */   }
/*     */ 
/*     */   public static boolean endsWith(String string, String pattern)
/*     */   {
/* 803 */     if ((!Util.valid(string)) || (!Util.valid(pattern))) return false;
/* 804 */     int slen = string.length(); int plen = pattern.length();
/* 805 */     if (slen < plen) return false;
/* 806 */     char sch = '\000'; char pch = '\000';
/* 807 */     for (int i = 0; i < plen; i++) {
/* 808 */       sch = string.charAt(slen - i - 1);
/* 809 */       pch = pattern.charAt(plen - i - 1);
/* 810 */       if (pch != sch) {
/* 811 */         if (i == plen - 1) return endsWith2(sch, pch);
/* 812 */         return false;
/*     */       }
/*     */     }
/* 815 */     return true;
/*     */   }
/*     */ 
/*     */   public static boolean endsWith(char sch, char pch)
/*     */   {
/* 831 */     if (sch == pch) return true;
/* 832 */     return endsWith2(sch, pch);
/*     */   }
/*     */ 
/*     */   private static boolean endsWith2(char sch, char pch)
/*     */   {
/* 848 */     String stemp = split(sch).get(); String ptemp = split(pch).get();
/* 849 */     return stemp.endsWith(ptemp);
/*     */   }
/*     */ 
/*     */   public static String removeEnd(String string, String pattern)
/*     */   {
/* 868 */     if ((!Util.valid(string)) || (!Util.valid(pattern))) return string;
/* 869 */     int slen = string.length(); int plen = pattern.length();
/* 870 */     if (slen < plen) return string;
/* 871 */     if (string.endsWith(pattern)) return string.substring(0, slen - plen);
/*     */ 
/* 874 */     if (!pattern.substring(1).equals(string.substring(slen - plen + 1))) return string;
/*     */ 
/* 877 */     String stemp = split(string.charAt(slen - plen)).get();
/* 878 */     String ptemp = split(pattern.charAt(0)).get();
/* 879 */     if (!stemp.endsWith(ptemp)) return string;
/* 880 */     String temp = stemp.substring(0, stemp.length() - ptemp.length());
/* 881 */     char[] ch = new char[3];
/* 882 */     int i = 0; for (int stop = temp.length(); i < stop; i++) {
/* 883 */       ch[i] = temp.charAt(i);
/*     */     }
/* 885 */     String ret = slen > plen ? string.substring(0, slen - plen) : "";
/* 886 */     char rch = combine(ch[0], ch[1], ch[2]);
/* 887 */     if (rch == 0) return ret;
/* 888 */     return ret += combine(ch[0], ch[1], ch[2]);
/*     */   }
/*     */ 
/*     */   public static String extractExtraEomi(String string, int len)
/*     */   {
/* 905 */     int strlen = string.length();
/* 906 */     if ((!Util.valid(string)) || (strlen < len)) return null;
/* 907 */     Hangul hg = split(string.charAt(strlen - len));
/* 908 */     if (!hg.hasJong()) return null;
/* 909 */     String temp = hg.get();
/* 910 */     return temp.charAt(temp.length() - 1) + string.substring(strlen - len + 1);
/*     */   }
/*     */ }

/* Location:           /Users/blueskywalker/Source/OpenSource/korean/org.snu.ids.ha.jar
 * Qualified Name:     org.snu.ids.ha.util.Hangul
 * JD-Core Version:    0.6.1
 */