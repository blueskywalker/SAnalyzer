/*     */ package org.snu.ids.ha.sp;
/*     */ 
/*     */ import java.util.ArrayList;
/*     */ import java.util.Collections;
/*     */ import java.util.Comparator;
/*     */ import java.util.Iterator;
/*     */ import java.util.List;
/*     */ import org.snu.ids.ha.constants.POSTag;
/*     */ import org.snu.ids.ha.ma.Eojeol;
/*     */ import org.snu.ids.ha.ma.Sentence;
/*     */ 
/*     */ public class Parser
/*     */ {
/*  17 */   private List<ParseGrammar> grammarList = null;
/*     */ 
/*  19 */   private static Parser parser = null;
/*     */ 
/*     */   public static Parser getInstance()
/*     */   {
/*  24 */     if (parser == null) parser = new Parser();
/*  25 */     return parser;
/*     */   }
/*     */ 
/*     */   public Parser()
/*     */   {
/*  31 */     initGrammars();
/*     */   }
/*     */ 
/*     */   protected void initGrammars()
/*     */   {
/*  37 */     this.grammarList = new ArrayList();
/*     */ 
/*  40 */     this.grammarList.add(new ParseGrammar("이유", "기", POSTag.ETN, "때문", POSTag.NNB, 1, 1));
/*     */ 
/*  43 */     this.grammarList.add(new ParseGrammar("동일", POSTag.N | POSTag.XSN, POSTag.NP, 1, 2));
/*  44 */     this.grammarList.add(new ParseGrammar("명사구", POSTag.N | POSTag.XSN, POSTag.N | POSTag.XPN, 1, 2));
/*  45 */     this.grammarList.add(new ParseGrammar("부사어", POSTag.JKM, POSTag.VP | POSTag.XPV, 1, 2));
/*  46 */     this.grammarList.add(new ParseGrammar("부사어", POSTag.JKM, POSTag.VP | POSTag.XPV, 10, 10));
/*  47 */     this.grammarList.add(new ParseGrammar("수식", POSTag.MD | POSTag.ETD | POSTag.JKG, POSTag.N | POSTag.XPN, 1, 2));
/*  48 */     this.grammarList.add(new ParseGrammar("수식", POSTag.MD | POSTag.ETD | POSTag.JKG, POSTag.N | POSTag.XPN, 3, 10));
/*  49 */     this.grammarList.add(new ParseGrammar("수식", POSTag.MAG, POSTag.VP | POSTag.MAG | POSTag.MD, 1, 2));
/*  50 */     this.grammarList.add(new ParseGrammar("수식", POSTag.MAG, POSTag.VP | POSTag.MAG | POSTag.MD, 10, 10));
/*  51 */     this.grammarList.add(new ParseGrammar("보조 연결", POSTag.ECS, POSTag.VP, 1, 2));
/*  52 */     this.grammarList.add(new ParseGrammar("의존 연결", POSTag.ECD, POSTag.VP, 10, 2));
/*  53 */     this.grammarList.add(new ParseGrammar("대등 연결", POSTag.ECE, POSTag.VP, 10, 2));
/*  54 */     this.grammarList.add(new ParseGrammar("체언 연결", POSTag.JC, POSTag.N | POSTag.XPN, 1, 2));
/*  55 */     this.grammarList.add(new ParseGrammar("주어", POSTag.JKS, POSTag.VP, 10, 2));
/*  56 */     this.grammarList.add(new ParseGrammar("주어", POSTag.N | POSTag.XSN | POSTag.JKS | POSTag.JX, POSTag.VCP, 10, 10));
/*  57 */     this.grammarList.add(new ParseGrammar("보어", POSTag.JKC | POSTag.JX, POSTag.VCN, 3, 10));
/*  58 */     this.grammarList.add(new ParseGrammar("목적어", POSTag.JKO, POSTag.VP, 10, 2));
/*  59 */     this.grammarList.add(new ParseGrammar("(주어,목적)대상", POSTag.N | POSTag.XSN | POSTag.JX | POSTag.ETN, POSTag.VP | POSTag.XPV, 10, 100));
/*  60 */     this.grammarList.add(new ParseGrammar("인용", POSTag.JKQ, POSTag.VV, 1, 2));
/*     */ 
/*  62 */     Collections.sort(this.grammarList, new Comparator()
/*     */     {
/*     */       public int compare(ParseGrammar arg0, ParseGrammar arg1)
/*     */       {
/*  68 */         return arg0.priority - arg1.priority;
/*     */       }
/*     */     });
/*     */   }
/*     */ 
/*     */   public ParseTree parse(Sentence sentence)
/*     */   {
/*  77 */     List nodeList = new ArrayList();
/*  78 */     for (Iterator itr = sentence.iterator(); itr.hasNext(); ) {
/*  79 */       nodeList.add(new ParseTreeNode((Eojeol)itr.next()));
/*     */     }
/*     */ 
/*  82 */     for (int i = 0; i < nodeList.size() - 1; i++) {
/*  83 */       ParseTreeNode ptnPrev = (ParseTreeNode)nodeList.get(i);
/*     */ 
/*  85 */       for (int j = i + 1; j < nodeList.size(); j++) {
/*  86 */         ParseTreeNode ptnNext = (ParseTreeNode)nodeList.get(j);
/*  87 */         ParseTreeEdge arc = dominate(ptnPrev, ptnNext, j - i);
/*  88 */         if (arc != null) {
/*  89 */           ptnNext.addChildEdge(arc);
/*  90 */           ptnPrev.setParentNode(ptnNext);
/*  91 */           break;
/*     */         }
/*     */       }
/*     */     }
/*     */ 
/*  96 */     ParseTree tree = new ParseTree();
/*  97 */     tree.setSentenec(sentence.getSentence());
/*  98 */     for (Iterator itr = nodeList.iterator(); itr.hasNext(); ) {
/*  99 */       ParseTreeNode ptn = (ParseTreeNode)itr.next();
/* 100 */       if (ptn.getParentNode() == null) tree.setRoot(ptn);
/*     */     }
/* 102 */     tree.setId();
/* 103 */     tree.setAllList();
/* 104 */     return tree;
/*     */   }
/*     */ 
/*     */   public ParseTreeEdge dominate(ParseTreeNode ptnPrev, ParseTreeNode ptnNext, int distance)
/*     */   {
/* 110 */     ParseTreeEdge arc = null;
/* 111 */     int i = 0; for (int size = this.grammarList.size(); i < size; i++) {
/* 112 */       if ((arc = ((ParseGrammar)this.grammarList.get(i)).dominate(ptnPrev, ptnNext, distance)) != null) {
/* 113 */         return arc;
/*     */       }
/*     */     }
/* 116 */     return null;
/*     */   }
/*     */ }

/* Location:           /Users/blueskywalker/Source/OpenSource/korean/org.snu.ids.ha.jar
 * Qualified Name:     org.snu.ids.ha.sp.Parser
 * JD-Core Version:    0.6.1
 */